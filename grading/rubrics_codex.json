[
  {
    "id": "coordinator_endpoints",
    "weight": 12,
    "criterion": "Coordinator exposes health, metrics, enqueue, pull/next, complete, and websocket routes that respond with expected status codes under load.",
    "required": true,
    "test_command": "cargo test rubric_coordinator_endpoints --test grade_codex"
  },
  {
    "id": "worker_long_polling",
    "weight": 10,
    "criterion": "Worker nodes discover the coordinator via mDNS (or hints), long-poll /tasks/pull with exponential backoff, and successfully post completions.",
    "required": true,
    "test_command": "cargo test rubric_worker_long_polling --test grade_codex"
  },
  {
    "id": "crdt_queue_precision",
    "weight": 10,
    "criterion": "Task queue tracks TaskKind, CRDT membership, and slab-backed allocations without leaking or duplicating entries during batch pops.",
    "required": true,
    "test_command": "cargo test rubric_crdt_queue_precision --test grade_codex"
  },
  {
    "id": "raft_replication_feature",
    "weight": 9,
    "criterion": "With --features raft-consensus, Raft nodes replicate enqueue/dequeue log entries, maintain leader term, and apply commits to the queue.",
    "required": true,
    "test_command": "cargo test rubric_raft_replication_feature --features raft-consensus --test grade_codex"
  },
  {
    "id": "metrics_observability",
    "weight": 8,
    "criterion": "Prometheus metrics export queue depth, election counts, worker pull latency, and task processing histograms with stable label sets.",
    "required": true,
    "test_command": "cargo test rubric_metrics_observability --test grade_codex"
  },
  {
    "id": "compute_pipeline_performance",
    "weight": 7,
    "criterion": "Rayon-backed compute tasks and tokio-based IO tasks execute without blocking the async runtime and finish within target latency bounds.",
    "required": false,
    "test_command": "cargo test rubric_compute_pipeline_performance --test grade_codex"
  },
  {
    "id": "cli_simulation_scale",
    "weight": 6,
    "criterion": "CLI simulate mode orchestrates multi-node, multi-worker runs with adjustable batch sizes and completes 100+ tasks in under 10 seconds locally.",
    "required": false,
    "test_command": "cargo test rubric_cli_simulation_scale -- --ignored --test grade_codex"
  },
  {
    "id": "fuzz_hook_registration",
    "weight": 4,
    "criterion": "Queue fuzz harness compiles and the crate exposes a fuzz_apply-style log application path for serialized queue entries.",
    "required": false,
    "test_command": "cargo test rubric_fuzz_hook_registration --test grade_codex"
  }
]

